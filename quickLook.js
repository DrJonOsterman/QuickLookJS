
var qlObj = {

	inputEl : document.getElementById('fl'),
	outputEl: document.getElementById('resultBox'),
	btnEl: document.getElementById('tst'),
	customTerms: undefined,
	tableEl: document.getElementById('tbl')
};


(function(o){

	var reader =  null;
	var files = [];
	var filenames = [];
	var fileStrings = [];
	var badWords = ['50 103 49 99', '97 99 114 111 116 111 109 111 112 104 105 108 105 97', '97 110 97 108', '97 110 105 108 105 110 103 117 115', '97 110 117 115', '97 114 115 101 104 111 108 101', '97 115 115', '97 115 115 104 111 108 101', '97 115 115 109 117 110 99 104', '97 117 116 111 101 114 111 116 105 99', '98 97 98 101 108 97 110 100', '98 97 110 103 98 114 111 115', '98 97 114 101 98 97 99 107', '98 97 114 101 110 97 107 101 100', '98 97 115 116 97 114 100 111', '98 97 115 116 105 110 97 100 111', '98 98 119', '98 100 115 109', '98 101 115 116 105 97 108 105 116 121', '98 105 109 98 111 115', '98 105 114 100 108 111 99 107', '98 105 116 99 104', '98 108 117 109 112 107 105 110', '98 111 108 108 111 99 107 115', '98 111 110 100 97 103 101', '98 111 110 101 114', '98 111 111 98', '98 111 111 98 115', '98 117 107 107 97 107 101', '98 117 108 108 100 121 107 101', '98 117 110 103 104 111 108 101', '98 117 115 116 121', '98 117 116 116', '98 117 116 116 99 104 101 101 107 115', '98 117 116 116 104 111 108 101', '99 97 109 103 105 114 108', '99 97 109 115 108 117 116', '99 97 109 119 104 111 114 101', '99 97 114 112 101 116 109 117 110 99 104 101 114', '99 105 114 99 108 101 106 101 114 107', '99 108 105 116', '99 108 105 116 111 114 105 115', '99 108 117 115 116 101 114 102 117 99 107', '99 111 99 107', '99 111 99 107 115', '99 111 112 114 111 108 97 103 110 105 97', '99 111 112 114 111 112 104 105 108 105 97', '99 111 114 110 104 111 108 101', '99 117 109', '99 117 109 109 105 110 103', '99 117 110 110 105 108 105 110 103 117 115', '99 117 110 116', '100 97 114 107 105 101', '100 97 116 101 114 97 112 101', '100 101 101 112 116 104 114 111 97 116', '100 105 99 107', '100 105 108 100 111', '100 111 103 103 105 101 115 116 121 108 101', '100 111 103 103 121 115 116 121 108 101', '100 111 108 99 101 116 116', '100 111 109 105 110 97 116 105 111 110', '100 111 109 105 110 97 116 114 105 120', '100 111 109 109 101 115', '101 99 99 104 105', '101 106 97 99 117 108 97 116 105 111 110', '101 114 111 116 105 99', '101 114 111 116 105 115 109', '101 115 99 111 114 116', '101 117 110 117 99 104', '102 97 103 103 111 116', '102 101 99 97 108', '102 101 108 99 104', '102 101 108 108 97 116 105 111', '102 101 108 116 99 104', '102 101 109 100 111 109', '102 105 103 103 105 110 103', '102 105 110 103 101 114 105 110 103', '102 105 115 116 105 110 103', '102 111 111 116 106 111 98', '102 114 111 116 116 105 110 103', '102 117 99 107', '102 117 100 103 101 112 97 99 107 101 114', '102 117 116 97 110 97 114 105', '103 101 110 105 116 97 108 115', '103 111 97 116 99 120', '103 111 97 116 115 101', '103 111 107 107 117 110', '103 111 111 100 112 111 111 112', '103 111 114 101 103 97 115 109', '103 114 111 112 101', '103 117 114 111', '104 97 110 100 106 111 98', '104 97 114 100 99 111 114 101', '104 101 110 116 97 105', '104 111 109 111 101 114 111 116 105 99', '104 111 110 107 101 121', '104 111 111 107 101 114', '104 117 109 112 105 110 103', '105 110 99 101 115 116', '105 110 116 101 114 99 111 117 114 115 101', '106 97 105 108 98 97 105 116', '106 105 103 97 98 111 111', '106 105 103 103 97 98 111 111', '106 105 103 103 101 114 98 111 111', '106 105 122 122', '106 117 103 103 115', '107 105 107 101', '107 105 110 98 97 107 117', '107 105 110 107 115 116 101 114', '107 105 110 107 121', '107 110 111 98 98 105 110 103', '108 111 108 105 116 97', '108 111 118 101 109 97 107 105 110 103', '109 97 115 116 117 114 98 97 116 101', '109 105 108 102', '109 111 116 104 101 114 102 117 99 107 101 114', '109 117 102 102 100 105 118 105 110 103', '110 97 109 98 108 97', '110 97 119 97 115 104 105', '110 101 103 114 111', '110 101 111 110 97 122 105', '110 105 103 103 97', '110 105 103 103 101 114', '110 105 109 112 104 111 109 97 110 105 97', '110 105 112 112 108 101', '110 105 112 112 108 101 115', '110 117 100 101', '110 117 100 105 116 121', '110 121 109 112 104 111', '110 121 109 112 104 111 109 97 110 105 97', '111 99 116 111 112 117 115 115 121', '111 109 111 114 97 115 104 105', '111 114 103 97 115 109', '111 114 103 121', '112 97 101 100 111 112 104 105 108 101', '112 97 110 116 105 101 115', '112 97 110 116 121', '112 101 100 111 98 101 97 114', '112 101 100 111 112 104 105 108 101', '112 101 103 103 105 110 103', '112 101 110 105 115', '112 105 115 115 105 110 103', '112 105 115 115 112 105 103', '112 108 97 121 98 111 121', '112 111 110 121 112 108 97 121', '112 111 111 102', '112 111 111 112 99 104 117 116 101', '112 111 114 110', '112 111 114 110 111', '112 111 114 110 111 103 114 97 112 104 121', '112 116 104 99', '112 117 98 101 115', '112 117 115 115 121', '113 117 101 97 102', '114 97 103 104 101 97 100', '114 97 112 101', '114 97 112 105 110 103', '114 97 112 105 115 116', '114 101 99 116 117 109', '114 105 109 106 111 98', '114 105 109 109 105 110 103', '115 38 109', '115 97 100 105 115 109', '115 99 97 116', '115 99 104 108 111 110 103', '115 99 105 115 115 111 114 105 110 103', '115 101 109 101 110', '115 101 120', '115 101 120 111', '115 101 120 121', '115 104 101 109 97 108 101', '115 104 105 98 97 114 105', '115 104 105 116', '115 104 111 116 97', '115 104 114 105 109 112 105 110 103', '115 108 97 110 116 101 121 101', '115 108 117 116', '115 109 117 116', '115 110 97 116 99 104', '115 110 111 119 98 97 108 108 105 110 103', '115 111 100 111 109 105 122 101', '115 111 100 111 109 121', '115 112 105 99', '115 112 111 111 103 101', '115 116 114 97 112 111 110', '115 116 114 97 112 112 97 100 111', '115 117 99 107', '115 117 99 107 115', '115 119 97 115 116 105 107 97', '115 119 105 110 103 101 114', '116 104 114 101 101 115 111 109 101', '116 104 114 111 97 116 105 110 103', '116 105 116', '116 105 116 115', '116 105 116 116 105 101 115', '116 105 116 116 121', '116 111 112 108 101 115 115', '116 111 115 115 101 114', '116 111 119 101 108 104 101 97 100', '116 114 97 110 110 121', '116 114 105 98 97 100 105 115 109', '116 117 98 103 105 114 108', '116 117 115 104 121', '116 119 97 116', '116 119 105 110 107', '116 119 105 110 107 105 101', '117 110 100 114 101 115 115 105 110 103', '117 112 115 107 105 114 116', '117 114 111 112 104 105 108 105 97', '118 97 103 105 110 97', '118 105 98 114 97 116 111 114', '118 111 114 97 114 101 112 104 105 108 105 97', '118 111 121 101 117 114', '118 117 108 118 97', '119 97 110 107', '119 101 116 98 97 99 107', '120 120', '120 120 120', '121 97 111 105', '121 105 102 102 121', '122 111 111 112 104 105 108 105 97'];

     function decodeBadWords(str){
          var tempWord = '';
          str.split(' ').forEach(function(numCode){
               tempWord += String.fromCharCode(numCode);
          });
          return tempWord;
     }

	function setUp(){
		if 	(!(window.File && window.FileList && window.FileReader))
		{
			o.outputEl.innerHTML += "<h3>Sorry, your browser does not have support for the necessary features.</h3>";
		}

		else
		{
			o.btnEl.onclick = btnOnClick;

			badWords = ((!o.customTerms === undefined) && (typeof o.customTerms === Array)) ? Array.prototype.apply(badWords, o.customTerms) : badWords;
			if (o.tableEl !== undefined)
			{
				o.inputEl.onchange = redrawTable;
			}
			reader = new FileReader();
			reader.onload = readerOnLoad;
		}
	}

	function  btnOnClick(){
		for (var i = 0; i < o.inputEl.files.length ; i++) 
			{
				files.push(o.inputEl.files[i]);
				filenames[i] = files[i].name;
			}
		reader.readAsText(files[0]);
	}

	setUp();

	 function readerOnLoad(file){
		fileStrings.push(file.target.result);
		if ((reader.readyState === 2) && (files.length > 0))
		{
			files.splice(0,1);
			reader.readAsText(files[0]);
		}
		if ((reader.readyState === 2) && (files.length === 0))
		{
			scanStuff();
		}
	}

	function redrawTable(){
		for (var i = 0 ; i < o.inputEl.files.length ; i++)
		{
			var tempEl = o.tableEl.insertRow(-1);
			tempEl.insertCell(-1).innerHTML = o.inputEl.files[i].name;
			tempEl.insertCell(-1).innerHTML = o.inputEl.files[i].size / 1000;
			tempEl.insertCell(-1).innerHTML = o.inputEl .files[i].type;
		}
	}

	function scanStuff()
	{
		fileStrings.forEach(function(fileText, index)
		{
			var isClean = true;
			fileText.split(/\n/).forEach(function(line, lineNum)
			{
				badWords.forEach(function(word)
				{
					if (line.indexOf(word+' ') > -1)
					{
						o.outputEl.innerHTML += '<span class="result">' + filenames[index] + ": <b>" + word + "</b> found in line " + (lineNum + 1)+ ".</span>"; 
						isClean = false;
					}
				});

			});
			o.outputEl.innerHTML +=  (isClean == true) ? '<span class="result">' + filenames[index] + ' is clean.' + "</span>" : '';
		});
	}
})(qlObj);